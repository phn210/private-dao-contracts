/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IDKG, IDKGInterface } from "../IDKG";

const _abi = [
  {
    inputs: [],
    name: "generateDistributedKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "submitRound1Contribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "submitRound2Contribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "submitTallyContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "submitTallyResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDKG__factory {
  static readonly abi = _abi;
  static createInterface(): IDKGInterface {
    return new utils.Interface(_abi) as IDKGInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IDKG {
    return new Contract(address, _abi, signerOrProvider) as IDKG;
  }
}
