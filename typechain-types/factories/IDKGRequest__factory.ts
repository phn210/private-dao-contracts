/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IDKGRequest, IDKGRequestInterface } from "../IDKGRequest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalID",
        type: "bytes32",
      },
    ],
    name: "getDistributedKeyID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalID",
        type: "bytes32",
      },
    ],
    name: "getM",
    outputs: [
      {
        internalType: "uint256[][]",
        name: "",
        type: "uint256[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_distributedKeyID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getProposalID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalID",
        type: "bytes32",
      },
    ],
    name: "getR",
    outputs: [
      {
        internalType: "uint256[][]",
        name: "",
        type: "uint256[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalID",
        type: "bytes32",
      },
    ],
    name: "getRequest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "distributedKeyID",
            type: "uint256",
          },
          {
            internalType: "uint256[][]",
            name: "R",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[][]",
            name: "M",
            type: "uint256[][]",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
        ],
        internalType: "struct IDKGRequest.Request",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposalID",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "_result",
        type: "uint256[]",
      },
    ],
    name: "submitRequestResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDKGRequest__factory {
  static readonly abi = _abi;
  static createInterface(): IDKGRequestInterface {
    return new utils.Interface(_abi) as IDKGRequestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDKGRequest {
    return new Contract(address, _abi, signerOrProvider) as IDKGRequest;
  }
}
